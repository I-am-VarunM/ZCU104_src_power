/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "xgpio.h"
#include "xgpiops.h"


int main()
{
    init_platform();

    print("Hello World\n\r");
    print("Test PL GPIOs\n\r");
    /*
    //GPIO Init PL

	XGpio_Config * axi_gpio_config = XGpio_LookupConfig(XPAR_AXI_GPIO_0_DEVICE_ID);
	XGpio my_gpios;
	XGpio_Initialize(&my_gpios, XPAR_AXI_GPIO_0_DEVICE_ID);
	XGpio_CfgInitialize(&my_gpios, axi_gpio_config, my_gpios.BaseAddress);

	int result = XGpio_SelfTest(&my_gpios);
	if(result != XST_SUCCESS){
		print("Gpio SelfTest failed!");
	}



	u32 bitmask = 0x00ff;
	XGpio_SetDataDirection(&my_gpios, 1,bitmask); //Bits set to 0 are output and bits set to 1 are input.
	int led_state = 0;
	//for(;led_state <= 0xff; led_state++)
	XGpio_DiscreteWrite(&my_gpios, 1, led_state);
*/

    print("Test PS GPIOs\n\r");
    //Bank 1 is configured as output to display LED with the corresponding Bank 0 interrupt.
	XGpioPs_Config * my_gpio_ps_config = XGpioPs_LookupConfig(XPAR_PSU_GPIO_0_DEVICE_ID);
	XGpioPs my_gpios_ps;
	XGpioPs_CfgInitialize(&my_gpios_ps,my_gpio_ps_config, my_gpio_ps_config->BaseAddr);

	int result = XGpioPs_SelfTest(&my_gpios_ps);
	if(result != XST_SUCCESS){
			print("Gpio PS SelfTest failed!");
		}

	/*printf("Direction of Bank 0: %i\n",XGpioPs_GetDirectionPin(&my_gpios_ps, 0));
	printf("Direction of Bank 1: %i\n",XGpioPs_GetDirectionPin(&my_gpios_ps, 1));
	printf("Direction of Bank 2: %i\n",XGpioPs_GetDirectionPin(&my_gpios_ps, 2));

	u8 pin = 38, bank =0, pinInBank =0;
	XGpioPs_GetBankPin(pin, &bank, &pinInBank);
	printf("Pin %i is in bank %i with pin number %i\n",pin, bank, pinInBank);
*/
	//printf("Pin %i has direction %i\n",pin,XGpioPs_GetDirectionPin(&my_gpios_ps, pin));
	//printf("Pin %i has value %i\n",pin,XGpioPs_ReadPin(&my_gpios_ps, pin));
	//XGpioPs_SetDirectionPin(&my_gpios_ps, pin, 1);
	//XGpioPs_WritePin(&my_gpios_ps, pin, 1);





    cleanup_platform();
    return 0;
}
